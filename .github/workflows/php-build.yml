name: PHP Composer

on:
  push:
    tags:
    - '*'

permissions: read-all|write-all

jobs:
  build:
  
    runs-on: ubuntu-latest
    
    steps:
    
    - uses: actions/checkout@v3
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.0'
        extensions: mbstring, intl
        ini-values: post_max_size=256M, max_execution_time=180
        coverage: xdebug
        tools: php-cs-fixer, phpunit
          
    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress
    
    - name: Create an Archive For Release
      uses: montudor/action-zip@v0.1.0
      with:
        args: zip -X -r AzureLiveLookup.php.zip . -x ".git/*" "node_modules/*" "tests/*" ".github/*" composer.* package* phpunit.xml # We excluding git, node_modules, and others not needed in production

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
          name: AzureLiveLookup.php
          path: AzureLiveLookup.php.zip
    
    - name: Upload Release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: AzureLiveLookup.php.zip
        asset_name: AzureLiveLookup.php
        tag: ${{ github.ref }}
        overwrite: true
        body: "Latest Release"
    # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
    # Docs: https://getcomposer.org/doc/articles/scripts.md

    # - name: Run test suite
    #   run: composer run-script test
